(local vf vim.fn)
(fn getword [x1 x2 y]
  (vf.strcharpart (vf.getline y) (- x1 1) (+ (- x2 x1) 1))
  )
(fn wordcolumn [...]
  (vf.execute "keepjumps silent normal! \x1b")
  (local col1 (vf.virtcol "'<"))
  (local col2 (vf.virtcol "'>"))
  (local word (getword col1 col2 "."))
  (var beg (vf.line "."))
  (var end (vf.line "."))
  (while (and (> beg 1) (= (getword col1 col2 (- beg 1)) word))
    (set beg (- beg 1))
    )
  (while (and (< end (vf.line "$")) (= (getword col1 col2 (+ end 1)) word))
    (set end (+ end 1))
    )
  (vf.setcursorcharpos [beg col1])
  (vf.execute "keepjumps silent normal! \x16")
  (vf.setcursorcharpos [end col2])
  )
(fn charcolumn [...]
  (vf.execute "keepjumps silent normal! v")
  (wordcolumn)
  )
(fn getchar [x y]
  (vf.strcharpart (vf.getline y) (- x 1) 1)
  )
(fn wordrow [...]
  (vf.execute "keepjumps silent normal! \x1b")
  (var col1 (vf.virtcol "'<"))
  (var col2 (vf.virtcol "'>"))
  (local line (vf.line "."))
  (local char (getchar col1 line))
  (while (and (> col1 1) (= (getchar (- col1 1) line) char))
    (set col1 (- col1 1))
    )
  (while (and (< col2 (length (vf.getline line))) (= (getchar (+ col2 1) line) char))
    (set col2 (+ col2 1))
    )
  (vf.setcursorcharpos [line col1])
  (vf.execute "keepjumps silent normal! \x16")
  (vf.setcursorcharpos [line col2])
  )
(fn charrow [...]
  (vf.execute "keepjumps silent normal! v")
  (wordrow)
)
(let [k (require "utils.keymap")]
  (k.ono "im" charcolumn)
  (k.xno "im" wordcolumn)
  (k.ono "ik" charrow)
  (k.xno "ik" wordrow)
  )

